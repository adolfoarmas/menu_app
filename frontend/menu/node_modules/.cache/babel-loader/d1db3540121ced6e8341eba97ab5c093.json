{"ast":null,"code":"import { DISH_CATEGORIES_END_POINT } from '../settings.js';\n\nconst handleErrors = async response => {\n  if (!response.ok) {\n    // console.log('response', response)\n    let errorMessage = '';\n    const ApiMessages = await response.json();\n    console.log(await ApiMessages);\n    Object.entries(ApiMessages).forEach(_ref => {\n      let [key, value] = _ref;\n      const messages = value.join('\\n');\n      errorMessage += `${key}: ${messages}\\n`;\n      console.log('errorMessage', errorMessage);\n    });\n    throw new Error(errorMessage);\n  }\n\n  return response;\n};\n\nexport default async function deleteDishCategory(dishCategoryId, token, csfrToken) {\n  return fetch(DISH_CATEGORIES_END_POINT + dishCategoryId + '/', {\n    method: 'DELETE',\n    headers: {\n      // 'Content-Type': 'application/json',\n      'Authorization': `Token` + token,\n      'X-CSRFToken': csfrToken\n    } //body: JSON.stringify(payload)\n\n  }).then(handleErrors).then(data => {\n    return data;\n  }).catch(error => {\n    throw error.message;\n  });\n}","map":{"version":3,"names":["DISH_CATEGORIES_END_POINT","handleErrors","response","ok","errorMessage","ApiMessages","json","console","log","Object","entries","forEach","key","value","messages","join","Error","deleteDishCategory","dishCategoryId","token","csfrToken","fetch","method","headers","then","data","catch","error","message"],"sources":["/home/adolfo/menu_app/frontend/menu/src/services/dishCategory/deleteDishCategory.js"],"sourcesContent":["import {DISH_CATEGORIES_END_POINT} from '../settings.js'\n\n\nconst handleErrors = async (response) => {\n    if(!response.ok){\n        // console.log('response', response)\n        let errorMessage = ''\n        const ApiMessages = await response.json();\n        console.log(await ApiMessages)\n        Object.entries(ApiMessages).forEach(([key, value]) => {\n            const messages = value.join('\\n');\n            errorMessage += `${key}: ${messages}\\n`;\n            console.log('errorMessage', errorMessage)\n          });\n        throw new Error (errorMessage);\n    }\n    return response\n}\n\nexport default async function deleteDishCategory(dishCategoryId, token, csfrToken,){\n    return fetch(DISH_CATEGORIES_END_POINT + dishCategoryId + '/', {\n        method: 'DELETE',\n        headers: {\n            // 'Content-Type': 'application/json',\n            'Authorization': `Token` + token, \n            'X-CSRFToken':  csfrToken\n        },\n        //body: JSON.stringify(payload)\n    })\n    .then(handleErrors)\n    .then(data => {\n        return data\n    })\n    .catch(error => {\n        throw error.message\n    })\n}"],"mappings":"AAAA,SAAQA,yBAAR,QAAwC,gBAAxC;;AAGA,MAAMC,YAAY,GAAG,MAAOC,QAAP,IAAoB;EACrC,IAAG,CAACA,QAAQ,CAACC,EAAb,EAAgB;IACZ;IACA,IAAIC,YAAY,GAAG,EAAnB;IACA,MAAMC,WAAW,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA1B;IACAC,OAAO,CAACC,GAAR,CAAY,MAAMH,WAAlB;IACAI,MAAM,CAACC,OAAP,CAAeL,WAAf,EAA4BM,OAA5B,CAAoC,QAAkB;MAAA,IAAjB,CAACC,GAAD,EAAMC,KAAN,CAAiB;MAClD,MAAMC,QAAQ,GAAGD,KAAK,CAACE,IAAN,CAAW,IAAX,CAAjB;MACAX,YAAY,IAAK,GAAEQ,GAAI,KAAIE,QAAS,IAApC;MACAP,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,YAA5B;IACD,CAJH;IAKA,MAAM,IAAIY,KAAJ,CAAWZ,YAAX,CAAN;EACH;;EACD,OAAOF,QAAP;AACH,CAdD;;AAgBA,eAAe,eAAee,kBAAf,CAAkCC,cAAlC,EAAkDC,KAAlD,EAAyDC,SAAzD,EAAoE;EAC/E,OAAOC,KAAK,CAACrB,yBAAyB,GAAGkB,cAA5B,GAA6C,GAA9C,EAAmD;IAC3DI,MAAM,EAAE,QADmD;IAE3DC,OAAO,EAAE;MACL;MACA,iBAAkB,OAAD,GAAUJ,KAFtB;MAGL,eAAgBC;IAHX,CAFkD,CAO3D;;EAP2D,CAAnD,CAAL,CASNI,IATM,CASDvB,YATC,EAUNuB,IAVM,CAUDC,IAAI,IAAI;IACV,OAAOA,IAAP;EACH,CAZM,EAaNC,KAbM,CAaAC,KAAK,IAAI;IACZ,MAAMA,KAAK,CAACC,OAAZ;EACH,CAfM,CAAP;AAgBH"},"metadata":{},"sourceType":"module"}