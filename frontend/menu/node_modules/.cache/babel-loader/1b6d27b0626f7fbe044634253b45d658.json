{"ast":null,"code":"var _jsxFileName = \"/home/adolfo/menu_app/frontend/menu/src/hooks/modalHook.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { BtnClose, ModalArea, ModalBackArea, ModalHeader, Title } from \"../styles/css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from '@fortawesome/fontawesome-svg-core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useModal(textTitle) {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [title, setTitle] = useState(\"Modal\"); // const [isModalOpen, setIsModalOpen] = useState(false)\n\n  useEffect(() => {\n    setTitle(textTitle);\n  }, []);\n\n  const changeShow = () => {\n    setShow(!show);\n  };\n\n  return {\n    changeShow,\n    show,\n    title\n  };\n}\n\n_s(useModal, \"k6QyHukWhyAZiF3CGSy+eAqlGUE=\");\n\nfunction ModalHook(_ref) {\n  let {\n    modalHook,\n    content\n  } = _ref;\n  // Estado actual modalHook.show\n  // Cambio del estado modalHook.changeShow\n  return modalHook.show ? /*#__PURE__*/_jsxDEV(ModalBackArea, {\n    onClick: modalHook.changeShow,\n    children: /*#__PURE__*/_jsxDEV(ModalArea, {\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: [\" \", modalHook.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BtnClose, {\n          onClick: modalHook.changeShow,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this) : null;\n}\n\n_c = ModalHook;\nexport default ModalHook;\nexport { useModal };\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalHook\");","map":{"version":3,"names":["React","useEffect","useState","BtnClose","ModalArea","ModalBackArea","ModalHeader","Title","FontAwesomeIcon","faTimes","useModal","textTitle","show","setShow","title","setTitle","changeShow","ModalHook","modalHook","content","e","stopPropagation"],"sources":["/home/adolfo/menu_app/frontend/menu/src/hooks/modalHook.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  BtnClose,\n  ModalArea,\n  ModalBackArea,\n  ModalHeader,\n  Title,\n} from \"../styles/css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from '@fortawesome/fontawesome-svg-core';\n\nfunction useModal(textTitle) {\n  const [show, setShow] = useState(false);\n  const [title, setTitle] = useState(\"Modal\");\n  // const [isModalOpen, setIsModalOpen] = useState(false)\n\n  useEffect(() => {\n    setTitle(textTitle);\n  }, []);\n\n  const changeShow = () => {\n    setShow(!show);\n  };\n\n  return {\n    changeShow,\n    show,\n    title,\n  };\n}\n\nfunction ModalHook({ modalHook, content }) {\n  // Estado actual modalHook.show\n  // Cambio del estado modalHook.changeShow\n\n  return modalHook.show ? (\n    <ModalBackArea onClick={modalHook.changeShow}>\n      <ModalArea onClick={(e) => e.stopPropagation()}>\n        <ModalHeader>\n          <Title> {modalHook.title} </Title>\n          <BtnClose onClick={modalHook.changeShow}><FontAwesomeIcon icon={faTimes} /></BtnClose>\n          {/* <br /> */}\n        </ModalHeader>\n        {content}\n      </ModalArea>\n    </ModalBackArea>\n  ) : null;\n}\n\nexport default ModalHook;\n\nexport { useModal };\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,QADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,KALF,QAMO,eANP;AAQA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;;;AAEA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;EAAA;;EAC3B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,OAAD,CAAlC,CAF2B,CAG3B;;EAEAD,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACJ,SAAD,CAAR;EACD,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMK,UAAU,GAAG,MAAM;IACvBH,OAAO,CAAC,CAACD,IAAF,CAAP;EACD,CAFD;;EAIA,OAAO;IACLI,UADK;IAELJ,IAFK;IAGLE;EAHK,CAAP;AAKD;;GAlBQJ,Q;;AAoBT,SAASO,SAAT,OAA2C;EAAA,IAAxB;IAAEC,SAAF;IAAaC;EAAb,CAAwB;EACzC;EACA;EAEA,OAAOD,SAAS,CAACN,IAAV,gBACL,QAAC,aAAD;IAAe,OAAO,EAAEM,SAAS,CAACF,UAAlC;IAAA,uBACE,QAAC,SAAD;MAAW,OAAO,EAAGI,CAAD,IAAOA,CAAC,CAACC,eAAF,EAA3B;MAAA,wBACE,QAAC,WAAD;QAAA,wBACE,QAAC,KAAD;UAAA,gBAASH,SAAS,CAACJ,KAAnB;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,QAAD;UAAU,OAAO,EAAEI,SAAS,CAACF,UAA7B;UAAA,uBAAyC,QAAC,eAAD;YAAiB,IAAI,EAAEP;UAAvB;YAAA;YAAA;YAAA;UAAA;QAAzC;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAMGU,OANH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADK,GAWH,IAXJ;AAYD;;KAhBQF,S;AAkBT,eAAeA,SAAf;AAEA,SAASP,QAAT"},"metadata":{},"sourceType":"module"}