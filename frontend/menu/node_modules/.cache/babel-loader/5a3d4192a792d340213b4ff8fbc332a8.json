{"ast":null,"code":"var _jsxFileName = \"/home/adolfo/menu_app/frontend/menu/src/context/userContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\"; // import getDishCategories from \"../services/dishCategory/getDishCategories\";\n\nimport { DISH_CATEGORIES } from \"../services/settings\";\nimport { fetchData } from \"../services/fetchData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/createContext({});\nconst CategoriesContext = /*#__PURE__*/createContext({});\nconst UpdateViewContext = /*#__PURE__*/createContext({});\nconst ToastVisibilityContext = /*#__PURE__*/createContext({});\nconst DishesContext = /*#__PURE__*/createContext({}); // const apiData = fetchData(DISH_CATEGORIES);\n\nconst fetchCategories = fetchData(DISH_CATEGORIES);\n\nconst UserContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const apiData = fetchCategories;\n  const dishCategoriesApi = apiData.read();\n  const [userLogged, setUserLogged] = useState(null);\n  const [csrfToken, setCsrfToken] = useState(null);\n  const [userLoggedId, setUserLoggedId] = useState(null);\n  const [updateView, setUpdateView] = useState(1);\n  const [dishCategories, setDishCategories] = useState([]); //dishCategoriesApi\n\n  const [categoriesLoading, setDishCategoriesLoading] = useState(true);\n  const [dishes, setDishes] = useState([]);\n  const [toastVisible, setToastVisible] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastType, setToastType] = useState('');\n  useEffect(() => {\n    const getUserLoggedTokenValue = () => {\n      return window.localStorage.getItem('logedUserToken');\n    };\n\n    const getCsrftokenValue = () => {\n      var _document$cookie$spli;\n\n      return (_document$cookie$spli = document.cookie.split('; ').find(row => row.startsWith('csrftoken='))) === null || _document$cookie$spli === void 0 ? void 0 : _document$cookie$spli.split('=')[1];\n    };\n\n    const getUserLoggedId = () => {\n      return window.localStorage.getItem('logedUserId');\n    };\n\n    if (getUserLoggedTokenValue) {\n      setUserLogged(getUserLoggedTokenValue);\n      setCsrfToken(getCsrftokenValue);\n      setUserLoggedId(getUserLoggedId);\n    }\n\n    const apiData = fetchCategories;\n    const dishCategoriesApi = apiData.read();\n    setDishCategories(dishCategoriesApi);\n    setDishCategoriesLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      'token': [userLogged, setUserLogged],\n      'csfrToken': [csrfToken, setCsrfToken],\n      'userLoggedId': [userLoggedId, setUserLoggedId]\n    },\n    children: /*#__PURE__*/_jsxDEV(CategoriesContext.Provider, {\n      value: [dishCategories, setDishCategories, categoriesLoading, setDishCategoriesLoading],\n      children: /*#__PURE__*/_jsxDEV(UpdateViewContext.Provider, {\n        value: [updateView, setUpdateView],\n        children: /*#__PURE__*/_jsxDEV(ToastVisibilityContext.Provider, {\n          value: [toastVisible, setToastVisible, toastMessage, setToastMessage, toastType, setToastType],\n          children: /*#__PURE__*/_jsxDEV(DishesContext.Provider, {\n            value: [dishes, setDishes],\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n};\n\n_s(UserContextProvider, \"1wkTvZfnMdfjgjjhlH+2AMOWVvw=\");\n\n_c = UserContextProvider;\nexport { Context, CategoriesContext, UpdateViewContext, ToastVisibilityContext, DishesContext, UserContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","DISH_CATEGORIES","fetchData","Context","CategoriesContext","UpdateViewContext","ToastVisibilityContext","DishesContext","fetchCategories","UserContextProvider","children","apiData","dishCategoriesApi","read","userLogged","setUserLogged","csrfToken","setCsrfToken","userLoggedId","setUserLoggedId","updateView","setUpdateView","dishCategories","setDishCategories","categoriesLoading","setDishCategoriesLoading","dishes","setDishes","toastVisible","setToastVisible","toastMessage","setToastMessage","toastType","setToastType","getUserLoggedTokenValue","window","localStorage","getItem","getCsrftokenValue","document","cookie","split","find","row","startsWith","getUserLoggedId"],"sources":["/home/adolfo/menu_app/frontend/menu/src/context/userContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\n// import getDishCategories from \"../services/dishCategory/getDishCategories\";\nimport {DISH_CATEGORIES} from \"../services/settings\"\nimport { fetchData } from \"../services/fetchData\";\n\nconst Context = createContext({})\nconst CategoriesContext = createContext({})\nconst UpdateViewContext = createContext({})\nconst ToastVisibilityContext = createContext({})\nconst DishesContext = createContext({})\n\n\n// const apiData = fetchData(DISH_CATEGORIES);\n\nconst fetchCategories = fetchData(DISH_CATEGORIES) \n\nconst UserContextProvider = ({ children }) => {\n\n    const apiData = fetchCategories;\n    const dishCategoriesApi = apiData.read();\n\n    const [userLogged, setUserLogged] = useState(null)\n    const [csrfToken, setCsrfToken] = useState(null)\n    const [userLoggedId, setUserLoggedId] = useState(null)\n    const [updateView, setUpdateView] = useState(1)\n    const [dishCategories, setDishCategories] = useState([]) //dishCategoriesApi\n    const [categoriesLoading, setDishCategoriesLoading] = useState(true)\n    const [dishes, setDishes] = useState([])\n    const [toastVisible, setToastVisible] = useState(false);\n    const [toastMessage, setToastMessage] = useState('')\n    const [toastType, setToastType] = useState('')\n    \n    useEffect(() => {        \n        const getUserLoggedTokenValue = () => {\n          return window.localStorage.getItem('logedUserToken')\n        }\n\n        const getCsrftokenValue = () => {\n          return document.cookie\n                .split('; ')\n                .find((row) => row.startsWith('csrftoken='))\n                ?.split('=')[1];\n        \n        }\n\n        const getUserLoggedId = () => {\n          return window.localStorage.getItem('logedUserId')\n        }\n\n        if(getUserLoggedTokenValue) {\n          setUserLogged(getUserLoggedTokenValue)\n          setCsrfToken(getCsrftokenValue)\n          setUserLoggedId(getUserLoggedId)\n        }\n        \n        const apiData = fetchCategories;\n        const dishCategoriesApi = apiData.read();\n        setDishCategories(dishCategoriesApi)\n        setDishCategoriesLoading(false)\n\n      }, []);\n\n    return (\n    \n      <Context.Provider value={{'token':[userLogged, setUserLogged], 'csfrToken': [csrfToken, setCsrfToken], 'userLoggedId': [userLoggedId, setUserLoggedId]}}>\n        <CategoriesContext.Provider value={[dishCategories, setDishCategories, categoriesLoading, setDishCategoriesLoading]}>\n          <UpdateViewContext.Provider value={[updateView, setUpdateView]}>\n            <ToastVisibilityContext.Provider value={[toastVisible, setToastVisible, toastMessage, setToastMessage, toastType, setToastType]}>\n                <DishesContext.Provider value={[dishes, setDishes]}>\n            {/*user state sent as Context value parameter*/}\n            {children}\n                </DishesContext.Provider>\n            </ToastVisibilityContext.Provider>\n          </UpdateViewContext.Provider>\n        </CategoriesContext.Provider>\n      </Context.Provider>\n      \n      )\n}\n\nexport { Context, CategoriesContext, UpdateViewContext, ToastVisibilityContext, DishesContext, UserContextProvider }"],"mappings":"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"},"metadata":{},"sourceType":"module"}