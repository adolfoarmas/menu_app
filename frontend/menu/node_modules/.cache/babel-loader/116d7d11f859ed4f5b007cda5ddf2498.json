{"ast":null,"code":"var _jsxFileName = \"/home/adolfo/menu_app/frontend/menu/src/components/forms/DishForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { CategoriesContext } from \"../../context/userContext\";\nimport { ButtonCreateEdit, FormDish, FormDishDiv, FormFieldNameLabel, FromErrorLabel, ImageForm, ImageFormDiv, ImageFormLabel, ImageInput, InputsDiv } from \"../../styles/css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DishForm = _ref => {\n  _s();\n\n  let {\n    data = {},\n    onSubmit\n  } = _ref;\n  const [dishCategories] = useContext(CategoriesContext);\n  const [formData, setFormData] = useState(data);\n  const [categoriesList, setCategoriesList] = useState([]);\n  const [imagePreview, setImagePreview] = useState(null);\n  useEffect(() => {\n    setCategoriesList(dishCategories); // set default values\n\n    if (!data.hasOwnProperty(\"category\")) {\n      data['category'] = dishCategories[0].id;\n      setFormData(prevFormData => ({ ...prevFormData,\n        category: dishCategories[0].id\n      }));\n    }\n\n    if (data.hasOwnProperty(\"name\")) {\n      setFormData(prevFormData => ({ ...prevFormData,\n        id: data.id\n      }));\n    } //if it is for edit\n\n\n    setImagePreview(data.image);\n    console.log('data', data);\n    console.log('formData', formData);\n  }, [formData]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    onSubmit(formData);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    formData.image = file;\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      setImagePreview(reader.result);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormDish, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(FormDishDiv, {\n      children: [/*#__PURE__*/_jsxDEV(InputsDiv, {\n        children: [data.name ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Dish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add New Dish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(FormFieldNameLabel, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), !formData.name ? /*#__PURE__*/_jsxDEV(FromErrorLabel, {\n          children: \"this field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(FromErrorLabel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormFieldNameLabel, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"App-text-form-description\",\n          id: \"description\",\n          name: \"description\",\n          value: formData.description,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), !formData.description ? /*#__PURE__*/_jsxDEV(FromErrorLabel, {\n          children: \"this field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(FromErrorLabel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormFieldNameLabel, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"caregory\",\n          name: \"category\",\n          value: formData.category,\n          onChange: handleChange,\n          required: true,\n          children: categoriesList.map((cat, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            name: \"category\",\n            value: Number(cat.id),\n            children: cat.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), !formData.category ? /*#__PURE__*/_jsxDEV(FromErrorLabel, {\n          children: \"this field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(FromErrorLabel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormFieldNameLabel, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Observation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"App-text-form-observation\",\n          id: \"observation\",\n          name: \"observation\",\n          value: formData.observation,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-dish-form-form-price\",\n          children: [/*#__PURE__*/_jsxDEV(FormFieldNameLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-dish-form-form-price-price\",\n              type: \"number\",\n              id: \"price\",\n              name: \"price\",\n              value: formData.price,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), !formData.price ? /*#__PURE__*/_jsxDEV(FromErrorLabel, {\n              children: \"this field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(FromErrorLabel, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormFieldNameLabel, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Currency:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"new-dish-form-form-price-currency\",\n              type: \"text\",\n              id: \"currency\",\n              name: \"currency\",\n              value: formData.currency,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), !formData.currency ? /*#__PURE__*/_jsxDEV(FromErrorLabel, {\n              children: \"this field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(FromErrorLabel, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonCreateEdit, {\n          disabled: data === formData,\n          type: \"submit\",\n          children: data.name ? \"Update\" : \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageFormDiv, {\n        children: [/*#__PURE__*/_jsxDEV(FormFieldNameLabel, {\n          className: \"new-dish-form-form-picture\",\n          children: \"Picture:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), !formData.image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select a refecence image to your dish:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ImageFormLabel, {\n            htmlFor: \"image\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ImageForm, {\n            name: \"image\",\n            src: imagePreview,\n            alt: \"dish selected file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ImageFormLabel, {\n            htmlFor: \"image\",\n            children: \"Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(ImageInput, {\n          type: \"file\",\n          id: \"image\",\n          name: \"image\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DishForm, \"xmg8LujN60EgYj75UPwgVf5Yq4M=\");\n\n_c = DishForm;\nexport default DishForm; // const ButtonDiv = styled.div`\n//   button {\n//     margin: 0;\n//     align-self: center;\n//     color: white;\n//     background-color: #325891;\n//     padding: 0.5em 1.3em;\n//     margin: 1em 0em;\n//     border-style: none;\n//     border-radius: 0.3em;\n//     border: none;\n//     font-size: 1rem;\n//     height: auto;\n//     :hover {\n//       background-color: #3865ad;\n//       cursor: pointer;\n//     }\n//   }\n// `;\n// const Image = styled.img`\n//   width: 20em;\n//   height: 20em;\n//   padding: 5px 5px;\n//   margin: 0;\n//   border: 0 solid #ccc;\n//   border-radius: 1em;\n//   box-sizing: border-box;\n// `;\n// const ImageLabel = styled.label`\n//   align-self: center;\n//   color: white;\n//   background-color: #325891;\n//   padding: 0.5em 1.3em;\n//   margin: 1em 1em;\n//   border-radius: 0.3em;\n//   border: 1px black;\n//   font-size: 1rem;\n//   height: auto;\n//   :hover {\n//     background-color: #3865ad;\n//     cursor: pointer;\n//   }\n// `;\n// const ImageInput = styled.input`\n//   opacity: 0;\n//   width: 0;\n// `;\n// const ImageFormDiv = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   button {\n//     background-color: #7f9ccb;\n//     padding: 5px 10px;\n//     border-radius: 5px;\n//     border: 1px ridge black;\n//     font-size: 0.8rem;\n//     height: auto;\n//   }\n// `;\n// const FormFieldNameLabel = styled.label`\n//   display: flex;\n//   flex-direction: column;\n//   height: auto;\n//   p {\n//     margin: 0;\n//   }\n// `;\n// const FromErrorLabel = styled.label`\n//   font-size: 0.8em;\n//   color: #ff0000a2;\n// `;\n// const InputsDiv = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   padding: 0 50px 0 0;\n//   width: 100%;\n//   input,\n//   textarea,\n//   select {\n//     padding: 5px 5px;\n//     margin: 0;\n//     border: 0em solid #ccc;\n//     box-sizing: border-box;\n//   }\n// `;\n// const FormDiv = styled.div`\n//   display: flex;\n//   flex-flow: row;\n//   width: 100%;\n//   height: 100%;\n//   padding: 20px 20px;\n//   background: inherit;\n//   top: 0;\n//   right: 0;\n//   left: 0;\n//   bottom: 0;\n//   z-index: 999999999;\n// `;\n// const Form = styled.form`\n//   display: flex;\n//   flex-direction: column;\n//   padding: 1em;\n//   max-width: 80%;\n//   @media only screen and (min-width: 768px) {\n//     .FormDiv {\n//       flex-direction: row;\n//     }\n//   }\n//   .InputsDiv .ImageFormDiv {\n//     flex-basis: 100%;\n//     margin: 10px;\n//   }\n//   @media only screen and (min-width: 768px) {\n//     .InputsDiv .ImageFormDiv {\n//       flex-basis: 50%;\n//     }\n//   }\n// `;\n\nvar _c;\n\n$RefreshReg$(_c, \"DishForm\");","map":{"version":3,"names":["React","useState","useEffect","useContext","CategoriesContext","ButtonCreateEdit","FormDish","FormDishDiv","FormFieldNameLabel","FromErrorLabel","ImageForm","ImageFormDiv","ImageFormLabel","ImageInput","InputsDiv","DishForm","data","onSubmit","dishCategories","formData","setFormData","categoriesList","setCategoriesList","imagePreview","setImagePreview","hasOwnProperty","id","prevFormData","category","image","console","log","handleSubmit","event","preventDefault","handleChange","name","value","target","prevState","handleFileChange","file","files","reader","FileReader","readAsDataURL","onloadend","result","description","map","cat","index","Number","observation","price","currency"],"sources":["/home/adolfo/menu_app/frontend/menu/src/components/forms/DishForm.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { CategoriesContext } from \"../../context/userContext\";\nimport {\n  ButtonCreateEdit,\n  FormDish,\n  FormDishDiv,\n  FormFieldNameLabel,\n  FromErrorLabel,\n  ImageForm,\n  ImageFormDiv,\n  ImageFormLabel,\n  ImageInput,\n  InputsDiv,\n} from \"../../styles/css\";\n\nconst DishForm = ({ data = {}, onSubmit }) => {\n  \n  const [dishCategories] = useContext(CategoriesContext);\n  \n  const [formData, setFormData] = useState(data);\n  const [categoriesList, setCategoriesList] = useState([]);\n  const [imagePreview, setImagePreview] = useState(null);\n\n  useEffect(() => {\n    setCategoriesList(dishCategories);\n\n    // set default values\n    if (!data.hasOwnProperty(\"category\")) {\n      data['category'] = dishCategories[0].id\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        category: dishCategories[0].id,\n      }));\n    }\n\n    if (data.hasOwnProperty(\"name\")) {\n      setFormData((prevFormData) => ({\n        ...prevFormData,\n        id: data.id,\n      }));\n    }\n    //if it is for edit\n    setImagePreview(data.image);\n    console.log('data', data)\n    console.log('formData', formData)\n  }, [formData]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    onSubmit(formData);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    formData.image = file;\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setImagePreview(reader.result);\n    };\n  };\n\n  return (\n    <FormDish onSubmit={handleSubmit}>\n      <FormDishDiv>\n        <InputsDiv>\n          {data.name ? <h2>Edit Dish</h2> : <h2>Add New Dish</h2>}\n          <FormFieldNameLabel>\n            <p>Name:</p>\n          </FormFieldNameLabel>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n            autoFocus\n          />\n          {!formData.name ? (\n            <FromErrorLabel>this field is required</FromErrorLabel>\n          ) : (\n            <FromErrorLabel></FromErrorLabel>\n          )}\n          <FormFieldNameLabel>\n            <p>Description:</p>\n          </FormFieldNameLabel>\n          <textarea\n            className=\"App-text-form-description\"\n            id=\"description\"\n            name=\"description\"\n            value={formData.description}\n            onChange={handleChange}\n            required\n          />\n          {!formData.description ? (\n            <FromErrorLabel>this field is required</FromErrorLabel>\n          ) : (\n            <FromErrorLabel></FromErrorLabel>\n          )}\n          <FormFieldNameLabel>\n            <p>Category:</p>\n          </FormFieldNameLabel>\n          <select\n            id=\"caregory\"\n            name=\"category\"\n            value={formData.category}\n            onChange={handleChange}\n            required\n          >\n            {categoriesList.map((cat, index) => (\n              <option key={index} name=\"category\" value={Number(cat.id)}>\n                {cat.name}\n              </option>\n            ))}\n          </select>\n          {!formData.category ? (\n            <FromErrorLabel>this field is required</FromErrorLabel>\n          ) : (\n            <FromErrorLabel></FromErrorLabel>\n          )}\n          <FormFieldNameLabel>\n            <p>Observation:</p>\n          </FormFieldNameLabel>\n          <textarea\n            className=\"App-text-form-observation\"\n            id=\"observation\"\n            name=\"observation\"\n            value={formData.observation}\n            onChange={handleChange}\n          />\n          <div className=\"new-dish-form-form-price\">\n            <FormFieldNameLabel>\n              <p>Price:</p>\n              <input\n                className=\"new-dish-form-form-price-price\"\n                type=\"number\"\n                id=\"price\"\n                name=\"price\"\n                value={formData.price}\n                onChange={handleChange}\n                required\n              />\n              {!formData.price ? (\n                <FromErrorLabel>this field is required</FromErrorLabel>\n              ) : (\n                <FromErrorLabel></FromErrorLabel>\n              )}\n            </FormFieldNameLabel>\n            <FormFieldNameLabel>\n              <p>Currency:</p>\n              <input\n                className=\"new-dish-form-form-price-currency\"\n                type=\"text\"\n                id=\"currency\"\n                name=\"currency\"\n                value={formData.currency}\n                onChange={handleChange}\n                required\n              />\n              {!formData.currency ? (\n                <FromErrorLabel>this field is required</FromErrorLabel>\n              ) : (\n                <FromErrorLabel></FromErrorLabel>\n              )}\n            </FormFieldNameLabel>\n          </div>\n          <ButtonCreateEdit disabled={data===formData} type=\"submit\">\n            {data.name ? \"Update\" : \"Create\"}\n          </ButtonCreateEdit>\n        </InputsDiv>\n        <ImageFormDiv>\n          <FormFieldNameLabel className=\"new-dish-form-form-picture\">\n            Picture:\n          </FormFieldNameLabel>\n          {!formData.image ? (\n            <>\n              <label>Select a refecence image to your dish:</label>\n              <ImageFormLabel htmlFor=\"image\">Upload</ImageFormLabel>\n            </>\n          ) : (\n            <>\n              <ImageForm\n                name=\"image\"\n                src={imagePreview}\n                alt=\"dish selected file\"\n              />\n              <ImageFormLabel htmlFor=\"image\">Change</ImageFormLabel>\n            </>\n          )}\n          <ImageInput\n            type=\"file\"\n            id=\"image\"\n            name=\"image\"\n            onChange={handleFileChange}\n          />\n        </ImageFormDiv>\n      </FormDishDiv>\n    </FormDish>\n  );\n};\n\nexport default DishForm;\n\n// const ButtonDiv = styled.div`\n//   button {\n//     margin: 0;\n//     align-self: center;\n//     color: white;\n//     background-color: #325891;\n//     padding: 0.5em 1.3em;\n//     margin: 1em 0em;\n//     border-style: none;\n//     border-radius: 0.3em;\n//     border: none;\n//     font-size: 1rem;\n//     height: auto;\n//     :hover {\n//       background-color: #3865ad;\n//       cursor: pointer;\n//     }\n//   }\n// `;\n\n// const Image = styled.img`\n//   width: 20em;\n//   height: 20em;\n//   padding: 5px 5px;\n//   margin: 0;\n//   border: 0 solid #ccc;\n//   border-radius: 1em;\n//   box-sizing: border-box;\n// `;\n\n// const ImageLabel = styled.label`\n//   align-self: center;\n//   color: white;\n//   background-color: #325891;\n//   padding: 0.5em 1.3em;\n//   margin: 1em 1em;\n//   border-radius: 0.3em;\n//   border: 1px black;\n//   font-size: 1rem;\n//   height: auto;\n//   :hover {\n//     background-color: #3865ad;\n//     cursor: pointer;\n//   }\n// `;\n\n// const ImageInput = styled.input`\n//   opacity: 0;\n//   width: 0;\n// `;\n\n// const ImageFormDiv = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   button {\n//     background-color: #7f9ccb;\n//     padding: 5px 10px;\n//     border-radius: 5px;\n//     border: 1px ridge black;\n//     font-size: 0.8rem;\n//     height: auto;\n//   }\n// `;\n\n// const FormFieldNameLabel = styled.label`\n//   display: flex;\n//   flex-direction: column;\n//   height: auto;\n//   p {\n//     margin: 0;\n//   }\n// `;\n// const FromErrorLabel = styled.label`\n//   font-size: 0.8em;\n//   color: #ff0000a2;\n// `;\n\n// const InputsDiv = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   padding: 0 50px 0 0;\n//   width: 100%;\n\n//   input,\n//   textarea,\n//   select {\n//     padding: 5px 5px;\n//     margin: 0;\n//     border: 0em solid #ccc;\n//     box-sizing: border-box;\n//   }\n// `;\n\n// const FormDiv = styled.div`\n//   display: flex;\n//   flex-flow: row;\n//   width: 100%;\n//   height: 100%;\n//   padding: 20px 20px;\n//   background: inherit;\n//   top: 0;\n//   right: 0;\n//   left: 0;\n//   bottom: 0;\n//   z-index: 999999999;\n// `;\n\n// const Form = styled.form`\n//   display: flex;\n//   flex-direction: column;\n//   padding: 1em;\n//   max-width: 80%;\n\n//   @media only screen and (min-width: 768px) {\n//     .FormDiv {\n//       flex-direction: row;\n//     }\n//   }\n\n//   .InputsDiv .ImageFormDiv {\n//     flex-basis: 100%;\n//     margin: 10px;\n//   }\n\n//   @media only screen and (min-width: 768px) {\n//     .InputsDiv .ImageFormDiv {\n//       flex-basis: 50%;\n//     }\n//   }\n// `;\n"],"mappings":"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},"metadata":{},"sourceType":"module"}