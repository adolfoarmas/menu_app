{"ast":null,"code":"import _slicedToArray from \"/home/adolfo/Documents/menu_app_backup/menu_app/frontend/menu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/adolfo/Documents/menu_app_backup/menu_app/frontend/menu/src/context/userContext.js\";\nimport React, { createContext, useEffect, useState } from \"react\";\n// import getDishCategories from \"../services/dishCategory/getDishCategories\";\nimport { DISH_CATEGORIES } from \"../services/settings\";\nimport { fetchData } from \"../services/fetchData\";\nvar Context = createContext({});\nvar CategoriesContext = createContext({});\nvar UpdateViewContext = createContext({});\nvar ToastVisibilityContext = createContext({});\nvar DishesContext = createContext({});\n\n// const apiData = fetchData(DISH_CATEGORIES);\n\nvar fetchCategories = fetchData(DISH_CATEGORIES);\nvar UserContextProvider = function UserContextProvider(_ref) {\n  var children = _ref.children;\n  var apiData = fetchCategories;\n  var dishCategoriesApi = apiData.read();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    userLoggedKey = _useState2[0],\n    setUserLoggedKey = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    csrfToken = _useState4[0],\n    setCsrfToken = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userLoggedId = _useState6[0],\n    setUserLoggedId = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    userLoggedName = _useState8[0],\n    setUserLoggedName = _useState8[1];\n  var _useState9 = useState(1),\n    _useState10 = _slicedToArray(_useState9, 2),\n    updateView = _useState10[0],\n    setUpdateView = _useState10[1];\n  var _useState11 = useState(dishCategoriesApi),\n    _useState12 = _slicedToArray(_useState11, 2),\n    dishCategories = _useState12[0],\n    setDishCategories = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    dishes = _useState14[0],\n    setDishes = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    toastVisible = _useState16[0],\n    setToastVisible = _useState16[1];\n  var _useState17 = useState(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    toastMessage = _useState18[0],\n    setToastMessage = _useState18[1];\n  var _useState19 = useState(''),\n    _useState20 = _slicedToArray(_useState19, 2),\n    toastType = _useState20[0],\n    setToastType = _useState20[1];\n  useEffect(function () {\n    var getUserLoggedTokenValue = function getUserLoggedTokenValue() {\n      return window.localStorage.getItem('logedUserToken');\n    };\n    var getCsrftokenValue = function getCsrftokenValue() {\n      return document.cookie.split('; ').find(function (row) {\n        return row.startsWith('csrftoken=');\n      })?.split('=')[1];\n      // \n    };\n\n    var getUserLoggedId = function getUserLoggedId() {\n      return window.localStorage.getItem('logedUserId');\n    };\n    var getUserLoggedName = function getUserLoggedName() {\n      return window.localStorage.getItem('logedUserName');\n    };\n    if (getUserLoggedTokenValue) {\n      setUserLoggedKey(getUserLoggedTokenValue);\n      setCsrfToken(getCsrftokenValue);\n      setUserLoggedId(getUserLoggedId);\n      setUserLoggedName(getUserLoggedName);\n      //console.log('token', userLogged, 'csfrtoken', csrfToken)\n    }\n\n    var apiData = fetchCategories;\n    var dishCategoriesApi = apiData.read();\n    setDishCategories(dishCategoriesApi);\n  }, []);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      'key': [userLoggedKey, setUserLoggedKey],\n      'csfrToken': [csrfToken, setCsrfToken],\n      'userLoggedId': [userLoggedId, setUserLoggedId],\n      'userLoggedName': [userLoggedName, setUserLoggedName]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CategoriesContext.Provider, {\n    value: [dishCategories, setDishCategories],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UpdateViewContext.Provider, {\n    value: [updateView, setUpdateView],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToastVisibilityContext.Provider, {\n    value: [toastVisible, setToastVisible, toastMessage, setToastMessage, toastType, setToastType],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DishesContext.Provider, {\n    value: [dishes, setDishes],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, children)))));\n};\nexport { Context, CategoriesContext, UpdateViewContext, ToastVisibilityContext, DishesContext, UserContextProvider };","map":{"version":3,"names":["React","createContext","useEffect","useState","DISH_CATEGORIES","fetchData","Context","CategoriesContext","UpdateViewContext","ToastVisibilityContext","DishesContext","fetchCategories","UserContextProvider","_ref","children","apiData","dishCategoriesApi","read","_useState","_useState2","_slicedToArray","userLoggedKey","setUserLoggedKey","_useState3","_useState4","csrfToken","setCsrfToken","_useState5","_useState6","userLoggedId","setUserLoggedId","_useState7","_useState8","userLoggedName","setUserLoggedName","_useState9","_useState10","updateView","setUpdateView","_useState11","_useState12","dishCategories","setDishCategories","_useState13","_useState14","dishes","setDishes","_useState15","_useState16","toastVisible","setToastVisible","_useState17","_useState18","toastMessage","setToastMessage","_useState19","_useState20","toastType","setToastType","getUserLoggedTokenValue","window","localStorage","getItem","getCsrftokenValue","document","cookie","split","find","row","startsWith","getUserLoggedId","getUserLoggedName","createElement","Provider","value","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/adolfo/Documents/menu_app_backup/menu_app/frontend/menu/src/context/userContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\n// import getDishCategories from \"../services/dishCategory/getDishCategories\";\nimport {DISH_CATEGORIES} from \"../services/settings\"\nimport { fetchData } from \"../services/fetchData\";\n\nconst Context = createContext({})\nconst CategoriesContext = createContext({})\nconst UpdateViewContext = createContext({})\nconst ToastVisibilityContext = createContext({})\nconst DishesContext = createContext({})\n\n\n// const apiData = fetchData(DISH_CATEGORIES);\n\nconst fetchCategories = fetchData(DISH_CATEGORIES) \n\nconst UserContextProvider = ({ children }) => {\n\n    const apiData = fetchCategories;\n    const dishCategoriesApi = apiData.read();\n\n    const [userLoggedKey, setUserLoggedKey] = useState(null)\n    const [csrfToken, setCsrfToken] = useState(null)\n    const [userLoggedId, setUserLoggedId] = useState(null)\n    const [userLoggedName, setUserLoggedName] = useState(null)\n    const [updateView, setUpdateView] = useState(1)\n    const [dishCategories, setDishCategories] = useState(dishCategoriesApi)\n    const [dishes, setDishes] = useState([])\n    const [toastVisible, setToastVisible] = useState(false);\n    const [toastMessage, setToastMessage] = useState('')\n    const [toastType, setToastType] = useState('')\n    \n    useEffect(() => {        \n        const getUserLoggedTokenValue = () => {\n          return window.localStorage.getItem('logedUserToken')\n        }\n\n        const getCsrftokenValue = () => {\n          return document.cookie\n                .split('; ')\n                .find((row) => row.startsWith('csrftoken='))\n                ?.split('=')[1];\n        // \n        }\n\n        const getUserLoggedId = () => {\n          return window.localStorage.getItem('logedUserId')\n        }\n\n        const getUserLoggedName = () => {\n            return window.localStorage.getItem('logedUserName')\n          }\n\n\n\n        if(getUserLoggedTokenValue) {\n          setUserLoggedKey(getUserLoggedTokenValue)\n          setCsrfToken(getCsrftokenValue)\n          setUserLoggedId(getUserLoggedId)\n          setUserLoggedName(getUserLoggedName)\n          //console.log('token', userLogged, 'csfrtoken', csrfToken)\n        }\n        \n        const apiData = fetchCategories;\n        const dishCategoriesApi = apiData.read();\n        setDishCategories(dishCategoriesApi)\n\n      }, [])   \n\n    return (\n    \n      <Context.Provider value={{'key':[userLoggedKey, setUserLoggedKey], 'csfrToken': [csrfToken, setCsrfToken], 'userLoggedId': [userLoggedId, setUserLoggedId], 'userLoggedName': [userLoggedName, setUserLoggedName]}}>\n        <CategoriesContext.Provider value={[dishCategories, setDishCategories]}>\n          <UpdateViewContext.Provider value={[updateView, setUpdateView]}>\n            <ToastVisibilityContext.Provider value={[toastVisible, setToastVisible, toastMessage, setToastMessage, toastType, setToastType]}>\n                <DishesContext.Provider value={[dishes, setDishes]}>\n            {/*user state sent as Context value parameter*/}\n            {children}\n                </DishesContext.Provider>\n            </ToastVisibilityContext.Provider>\n          </UpdateViewContext.Provider>\n        </CategoriesContext.Provider>\n      </Context.Provider>\n      \n      )\n}\n\nexport { Context, CategoriesContext, UpdateViewContext, ToastVisibilityContext, DishesContext, UserContextProvider }"],"mappings":"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"},"metadata":{},"sourceType":"module"}