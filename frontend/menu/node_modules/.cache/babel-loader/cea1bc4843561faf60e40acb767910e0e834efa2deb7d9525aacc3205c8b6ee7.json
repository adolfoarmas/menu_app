{"ast":null,"code":"import { USER_LOGOUT_END_POINT } from \"./settings.js\";\nconst handleErrors = response => {\n  if (!response.ok) {\n    return {\n      'error': response.statusText\n    };\n  }\n  return response;\n};\nexport default async function logoutUser(userLogged) {\n  var _document$cookie$spli;\n  const csrftokenValue = (_document$cookie$spli = document.cookie.split('; ').find(row => row.startsWith('csrftoken='))) === null || _document$cookie$spli === void 0 ? void 0 : _document$cookie$spli.split('=')[1];\n  return fetch(USER_LOGOUT_END_POINT, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Token` + userLogged,\n      'X-CSRFToken': csrftokenValue\n    },\n    body: JSON.stringify()\n  }).then(handleErrors).then(data => {\n    if (!data.error) {\n      window.localStorage.removeItem('logedUserToken');\n      window.localStorage.removeItem('logedUserId');\n      window.localStorage.removeItem('logedUserName');\n      // document.cookie = \"sessionid=; Max-Age=0;secure; path=/\"\n      // document.cookie = \"csrftoken=; Max-Age=0;secure; path=/\"\n      return data.json();\n    }\n    return data;\n  });\n}","map":{"version":3,"names":["USER_LOGOUT_END_POINT","handleErrors","response","ok","statusText","logoutUser","userLogged","_document$cookie$spli","csrftokenValue","document","cookie","split","find","row","startsWith","fetch","method","headers","body","JSON","stringify","then","data","error","window","localStorage","removeItem","json"],"sources":["/frontend/menu/src/services/logoutUser.js"],"sourcesContent":["import {USER_LOGOUT_END_POINT} from \"./settings.js\"\n\nconst handleErrors = (response) => {\n    if(!response.ok){\n        return {'error': response.statusText}\n    }\n    return response\n}\n\nexport default async function logoutUser(userLogged){\n\nconst csrftokenValue = document.cookie\n    .split('; ')\n    .find((row) => row.startsWith('csrftoken='))\n    ?.split('=')[1];\n\nreturn fetch(USER_LOGOUT_END_POINT, {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token` + userLogged,\n        'X-CSRFToken': csrftokenValue\n    },\n    body: JSON.stringify()\n})\n.then(handleErrors)\n.then(data => {\n    if(!data.error){\n        window.localStorage.removeItem('logedUserToken')\n        window.localStorage.removeItem('logedUserId')\n        window.localStorage.removeItem('logedUserName')\n        // document.cookie = \"sessionid=; Max-Age=0;secure; path=/\"\n        // document.cookie = \"csrftoken=; Max-Age=0;secure; path=/\"\n        return data.json()\n    }\n    return data\n    })\n}"],"mappings":"AAAA,SAAQA,qBAAqB,QAAO,eAAe;AAEnD,MAAMC,YAAY,GAAIC,QAAQ,IAAK;EAC/B,IAAG,CAACA,QAAQ,CAACC,EAAE,EAAC;IACZ,OAAO;MAAC,OAAO,EAAED,QAAQ,CAACE;IAAU,CAAC;EACzC;EACA,OAAOF,QAAQ;AACnB,CAAC;AAED,eAAe,eAAeG,UAAUA,CAACC,UAAU,EAAC;EAAA,IAAAC,qBAAA;EAEpD,MAAMC,cAAc,IAAAD,qBAAA,GAAGE,QAAQ,CAACC,MAAM,CACjCC,KAAK,CAAC,IAAI,CAAC,CACXC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,UAAU,CAAC,YAAY,CAAC,CAAC,cAAAP,qBAAA,uBAFzBA,qBAAA,CAGjBI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAEnB,OAAOI,KAAK,CAACf,qBAAqB,EAAE;IAChCgB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,OAAM,GAAGX,UAAU;MACrC,aAAa,EAAEE;IACnB,CAAC;IACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;EACzB,CAAC,CAAC,CACDC,IAAI,CAACpB,YAAY,CAAC,CAClBoB,IAAI,CAACC,IAAI,IAAI;IACV,IAAG,CAACA,IAAI,CAACC,KAAK,EAAC;MACXC,MAAM,CAACC,YAAY,CAACC,UAAU,CAAC,gBAAgB,CAAC;MAChDF,MAAM,CAACC,YAAY,CAACC,UAAU,CAAC,aAAa,CAAC;MAC7CF,MAAM,CAACC,YAAY,CAACC,UAAU,CAAC,eAAe,CAAC;MAC/C;MACA;MACA,OAAOJ,IAAI,CAACK,IAAI,CAAC,CAAC;IACtB;IACA,OAAOL,IAAI;EACX,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}