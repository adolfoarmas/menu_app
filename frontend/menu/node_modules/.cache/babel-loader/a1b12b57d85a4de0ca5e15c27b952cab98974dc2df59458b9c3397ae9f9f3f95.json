{"ast":null,"code":"var _jsxFileName = \"/frontend/menu/src/components/ToolBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext } from \"react\";\nimport DishForm from \"./forms/DishForm\";\nimport DishCategoryForm from \"./forms/DishCategoryForm\";\nimport { CategoriesContext, Context, ToastVisibilityContext } from \"../context/userContext\";\nimport ModalHook, { useModal } from \"../hooks/modalHook\";\nimport createDishCategory from \"../services/dishCategory/createDishCategory\";\nimport createDish from \"../services/dish/createDish\";\nimport { ButtonNormal, ToolBarWrapper } from \"../styles/css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToolBar = () => {\n  _s();\n  const {\n    key,\n    csfrToken\n  } = useContext(Context);\n  const [dishCategories, setDishCategories] = useContext(CategoriesContext);\n  const [, setToastVisible,, setToastMessage,, setToastType] = useContext(ToastVisibilityContext);\n  const [userLoggedKey] = key;\n  const [csfrTokenValue] = csfrToken;\n  const newDishHook = useModal(\"Dish\");\n  const newDishCategoryHook = useModal(\"Dish Category\");\n  const newDishModal = () => {\n    newDishHook.changeShow();\n  };\n  const newDishCategoryModal = () => {\n    newDishCategoryHook.changeShow();\n  };\n  const displayToast = (message, type) => {\n    setToastMessage(message);\n    setToastType(type);\n    setToastVisible(true);\n  };\n  useEffect(() => {}, [dishCategories]);\n\n  //TO REFACTOR: Unify with onSubmit in DishItem.jsx component\n  const onSubmitNewDish = formData => {\n    let payload = new FormData();\n    payload.append(\"name\", formData.name);\n    payload.append(\"description\", formData.description);\n    payload.append(\"category\", JSON.parse(formData.category));\n    payload.append(\"observation\", formData.observation);\n    payload.append(\"image\", formData.image);\n    payload.append(\"price\", formData.price);\n    payload.append(\"currency\", formData.currency);\n    payload.append(\"created_by\", JSON.parse(window.localStorage.getItem(\"logedUserId\")));\n    createDish(payload, userLoggedKey, csfrTokenValue).then(data => {\n      // console.log(data)\n      if (data.Error) {\n        throw data;\n      }\n      return data;\n    }).then(data => {\n      const categoryId = data.category;\n      const updatedCategories = dishCategories.map(category => category.id === categoryId ? {\n        ...category,\n        dishes: [...category.dishes, data.url]\n      } : category);\n      setDishCategories(updatedCategories);\n      newDishModal();\n      const nameEdited = {\n        nameCreated: data.name\n      };\n      const createdToastMessageTemplate = t('createdToastMessageTemplate');\n      const displayToastMessage = interpolate(createdToastMessageTemplate, nameEdited);\n      displayToast(displayToastMessage, \"success\");\n    }).catch(data => {\n      displayToast(data, \"error\");\n    });\n  };\n\n  //TO REFACTOR: Unify with onSubmit in CategoryItem.jsx component\n  const onSubmitNewDishCategory = formData => {\n    let payload = new FormData();\n    payload.append(\"name\", formData.name);\n    payload.append(\"description\", formData.description);\n    payload.append(\"created_by\", JSON.parse(window.localStorage.getItem(\"logedUserId\")));\n    createDishCategory(payload, userLoggedKey, csfrTokenValue).then(data => {\n      // console.log(data)\n      if (data.Error) {\n        throw data;\n      }\n      return data;\n    }).then(data => {\n      // console.log(data)\n      const newCategory = [data];\n      setDishCategories([...dishCategories, ...newCategory]);\n      newDishCategoryModal();\n      displayToast('Category \"' + String(data.name) + '\" has been created!', \"success\");\n    }).catch(data => {\n      displayToast(data, \"error\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userLoggedKey ? /*#__PURE__*/_jsxDEV(ToolBarWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(ModalHook, {\n        modalHook: newDishHook,\n        content: /*#__PURE__*/_jsxDEV(DishForm, {\n          onSubmit: onSubmitNewDish,\n          dishCategories: dishCategories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalHook, {\n        modalHook: newDishCategoryHook,\n        content: /*#__PURE__*/_jsxDEV(DishCategoryForm, {\n          onSubmit: onSubmitNewDishCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonNormal, {\n        onClick: newDishModal,\n        children: \"+ Add Dish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonNormal, {\n        onClick: newDishCategoryModal,\n        children: \"+ New Dish Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n_s(ToolBar, \"j71FaApM6EeLzWzoKNzxp/Vx8Qo=\", false, function () {\n  return [useModal, useModal];\n});\n_c = ToolBar;\nexport default ToolBar;\nvar _c;\n$RefreshReg$(_c, \"ToolBar\");","map":{"version":3,"names":["React","useEffect","useContext","DishForm","DishCategoryForm","CategoriesContext","Context","ToastVisibilityContext","ModalHook","useModal","createDishCategory","createDish","ButtonNormal","ToolBarWrapper","jsxDEV","_jsxDEV","Fragment","_Fragment","ToolBar","_s","key","csfrToken","dishCategories","setDishCategories","setToastVisible","setToastMessage","setToastType","userLoggedKey","csfrTokenValue","newDishHook","newDishCategoryHook","newDishModal","changeShow","newDishCategoryModal","displayToast","message","type","onSubmitNewDish","formData","payload","FormData","append","name","description","JSON","parse","category","observation","image","price","currency","window","localStorage","getItem","then","data","Error","categoryId","updatedCategories","map","id","dishes","url","nameEdited","nameCreated","createdToastMessageTemplate","t","displayToastMessage","interpolate","catch","onSubmitNewDishCategory","newCategory","String","children","modalHook","content","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/frontend/menu/src/components/ToolBar.jsx"],"sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport DishForm from \"./forms/DishForm\";\nimport DishCategoryForm from \"./forms/DishCategoryForm\";\nimport {\n  CategoriesContext,\n  Context,\n  ToastVisibilityContext,\n} from \"../context/userContext\";\nimport ModalHook, { useModal } from \"../hooks/modalHook\";\nimport createDishCategory from \"../services/dishCategory/createDishCategory\";\nimport createDish from \"../services/dish/createDish\";\nimport {ButtonNormal, ToolBarWrapper, } from \"../styles/css\"\n\nconst ToolBar = () => {\n  const { key, csfrToken } = useContext(Context);\n  const [dishCategories, setDishCategories] = useContext(CategoriesContext);\n  const [, setToastVisible, , setToastMessage, , setToastType,] = useContext(ToastVisibilityContext);\n  const [userLoggedKey] = key;\n  const [csfrTokenValue] = csfrToken;\n\n  const newDishHook = useModal(\"Dish\");\n  const newDishCategoryHook = useModal(\"Dish Category\");\n\n  const newDishModal = () => {\n    newDishHook.changeShow();\n  };\n\n  const newDishCategoryModal = () => {\n    newDishCategoryHook.changeShow();\n  };\n\n  const displayToast = (message, type) => {\n    setToastMessage(message);\n    setToastType(type);\n    setToastVisible(true);\n  };\n\n  useEffect(() => {}, [dishCategories]);\n\n  //TO REFACTOR: Unify with onSubmit in DishItem.jsx component\n  const onSubmitNewDish = (formData) => {\n    let payload = new FormData();\n    payload.append(\"name\", formData.name);\n    payload.append(\"description\", formData.description);\n    payload.append(\"category\", JSON.parse(formData.category));\n    payload.append(\"observation\", formData.observation);\n    payload.append(\"image\", formData.image);\n    payload.append(\"price\", formData.price);\n    payload.append(\"currency\", formData.currency);\n    payload.append(\n      \"created_by\",\n      JSON.parse(window.localStorage.getItem(\"logedUserId\"))\n    );\n\n    createDish(payload, userLoggedKey, csfrTokenValue)\n      .then((data) => {\n        // console.log(data)\n        if (data.Error) {\n          throw data;\n        }\n        return data;\n      })\n      .then((data) => {\n        const categoryId = data.category;\n        const updatedCategories = dishCategories.map((category) =>\n          category.id === categoryId\n            ? {\n                ...category,\n                dishes: [...category.dishes, data.url],\n              }\n            : category\n        );\n        setDishCategories(updatedCategories);\n        newDishModal();\n        \n        const nameEdited = {nameCreated: data.name}\n        const createdToastMessageTemplate = t('createdToastMessageTemplate')\n        const displayToastMessage = interpolate(createdToastMessageTemplate, nameEdited)\n\n        displayToast(\n          displayToastMessage,\n          \"success\"\n        );\n      })\n      .catch((data) => {\n        displayToast(data, \"error\");\n      });\n  };\n\n  //TO REFACTOR: Unify with onSubmit in CategoryItem.jsx component\n  const onSubmitNewDishCategory = (formData) => {\n    let payload = new FormData();\n    payload.append(\"name\", formData.name);\n    payload.append(\"description\", formData.description);\n    payload.append(\n      \"created_by\",\n      JSON.parse(window.localStorage.getItem(\"logedUserId\"))\n    );\n    createDishCategory(payload, userLoggedKey, csfrTokenValue)\n      .then((data) => {\n        // console.log(data)\n        if (data.Error) {\n          throw data;\n        }\n        return data;\n      })\n      .then((data) => {\n        // console.log(data)\n        const newCategory = [data];\n        setDishCategories([...dishCategories, ...newCategory]);\n        newDishCategoryModal();\n        displayToast(\n          'Category \"' + String(data.name) + '\" has been created!',\n          \"success\"\n        );\n      })\n      .catch((data) => {\n        displayToast(data, \"error\");\n      });\n  };\n\n  return (\n    <>\n        {userLoggedKey? \n            (<ToolBarWrapper>\n        <ModalHook\n            modalHook={newDishHook}\n            content={\n            <DishForm\n                onSubmit={onSubmitNewDish}\n                dishCategories={dishCategories}\n            />\n            }\n        />\n        <ModalHook\n            modalHook={newDishCategoryHook}\n            content={<DishCategoryForm onSubmit={onSubmitNewDishCategory} />}\n        />\n        <ButtonNormal onClick={newDishModal}>\n            + Add Dish\n        </ButtonNormal>\n        <ButtonNormal onClick={newDishCategoryModal}>\n            + New Dish Category\n        </ButtonNormal>\n        </ToolBarWrapper>) : (<></>)}\n    </>\n    )\n\n}\n\nexport default ToolBar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}