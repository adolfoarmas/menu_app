{"ast":null,"code":"import { DISHES_END_POINT } from '../settings.js';\nconst handleErrors = async response => {\n  if (!response.ok) {\n    console.log('response', response);\n    let errorMessage = '';\n    const ApiMessages = await response.json();\n    console.log(await ApiMessages);\n    Object.entries(ApiMessages).forEach(([key, value]) => {\n      const messages = value.join('\\n');\n      errorMessage += `${key}: ${messages}\\n`;\n      console.log('errorMessage', errorMessage);\n    });\n    throw new Error(errorMessage);\n  }\n  return response.json();\n};\nexport default async function createDish(payload, token, csfrToken) {\n  console.log('DISHES_END_POINT', DISHES_END_POINT);\n  return fetch(DISHES_END_POINT, {\n    method: 'POST',\n    headers: {\n      // 'Content-Type': 'multipart/form-data', //'application/json',\n      'Authorization': `Token ` + token,\n      'X-CSRFToken': csfrToken\n    },\n    body: payload\n  }).then(handleErrors).then(async data => {\n    return await data;\n  }).catch(error => {\n    throw error.message;\n  });\n}","map":{"version":3,"names":["DISHES_END_POINT","handleErrors","response","ok","console","log","errorMessage","ApiMessages","json","Object","entries","forEach","key","value","messages","join","Error","createDish","payload","token","csfrToken","fetch","method","headers","body","then","data","catch","error","message"],"sources":["/home/adolfo/Documents/menu_app_backup/menu_app/frontend/menu/src/services/dish/createDish.js"],"sourcesContent":["import {DISHES_END_POINT} from '../settings.js';\n\nconst handleErrors = async (response) => {\n    if(!response.ok){\n        console.log('response', response)\n        let errorMessage = ''\n        const ApiMessages = await response.json();\n        console.log(await ApiMessages)\n        Object.entries(ApiMessages).forEach(([key, value]) => {\n            const messages = value.join('\\n');\n            errorMessage += `${key}: ${messages}\\n`;\n            console.log('errorMessage', errorMessage)\n          });\n        throw new Error (errorMessage);\n    }\n    return response.json()\n}\n\nexport default async function createDish(payload, token, csfrToken,){\n    console.log('DISHES_END_POINT', DISHES_END_POINT)\n    return fetch(DISHES_END_POINT, {\n        method: 'POST',\n        headers: {\n            // 'Content-Type': 'multipart/form-data', //'application/json',\n            'Authorization': `Token ` + token, \n            'X-CSRFToken':  csfrToken,\n        },\n        body: payload\n    })\n    .then(handleErrors)\n    .then(async data => {\n        return await data\n    })\n    .catch(error => {\n        throw error.message\n    })\n\n}"],"mappings":"AAAA,SAAQA,gBAAgB,QAAO,gBAAgB;AAE/C,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EACrC,IAAG,CAACA,QAAQ,CAACC,EAAE,EAAC;IACZC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAAC;IACjC,IAAII,YAAY,GAAG,EAAE;IACrB,MAAMC,WAAW,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IACzCJ,OAAO,CAACC,GAAG,CAAC,MAAME,WAAW,CAAC;IAC9BE,MAAM,CAACC,OAAO,CAACH,WAAW,CAAC,CAACI,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;MAClD,MAAMC,QAAQ,GAAGD,KAAK,CAACE,IAAI,CAAC,IAAI,CAAC;MACjCT,YAAY,IAAK,GAAEM,GAAI,KAAIE,QAAS,IAAG;MACvCV,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,YAAY,CAAC;IAC3C,CAAC,CAAC;IACJ,MAAM,IAAIU,KAAK,CAAEV,YAAY,CAAC;EAClC;EACA,OAAOJ,QAAQ,CAACM,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,eAAe,eAAeS,UAAUA,CAACC,OAAO,EAAEC,KAAK,EAAEC,SAAS,EAAE;EAChEhB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,gBAAgB,CAAC;EACjD,OAAOqB,KAAK,CAACrB,gBAAgB,EAAE;IAC3BsB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL;MACA,eAAe,EAAG,QAAO,GAAGJ,KAAK;MACjC,aAAa,EAAGC;IACpB,CAAC;IACDI,IAAI,EAAEN;EACV,CAAC,CAAC,CACDO,IAAI,CAACxB,YAAY,CAAC,CAClBwB,IAAI,CAAC,MAAMC,IAAI,IAAI;IAChB,OAAO,MAAMA,IAAI;EACrB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACZ,MAAMA,KAAK,CAACC,OAAO;EACvB,CAAC,CAAC;AAEN"},"metadata":{},"sourceType":"module","externalDependencies":[]}